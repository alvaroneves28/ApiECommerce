// <auto-generated />
using System;
using ApiECommerce.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiECommerce.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiECommerce.Entities.BasketItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("BasketItems");
                });

            modelBuilder.Entity("ApiECommerce.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UrlImage")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Meals",
                            UrlImage = "https://source.unsplash.com/400x300/?meal,food"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Combo Meals",
                            UrlImage = "https://source.unsplash.com/400x300/?combo-meal,fastfood"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Naturals",
                            UrlImage = "https://source.unsplash.com/400x300/?natural,vegetarian"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Drinks",
                            UrlImage = "https://source.unsplash.com/400x300/?drink,soda"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Juices",
                            UrlImage = "https://source.unsplash.com/400x300/?juice,fruit"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Desserts",
                            UrlImage = "https://source.unsplash.com/400x300/?dessert,cake"
                        });
                });

            modelBuilder.Entity("ApiECommerce.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("MostSold")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Popular")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("UrlImage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Available = true,
                            CategoryId = 1,
                            Detail = "Classic hamburger",
                            MostSold = true,
                            Name = "Hamburger Standard",
                            Popular = true,
                            Price = 5.99m,
                            Stock = 50,
                            UrlImage = "https://source.unsplash.com/400x300/?burger"
                        },
                        new
                        {
                            Id = 2,
                            Available = true,
                            CategoryId = 1,
                            Detail = "Hamburger with cheese",
                            MostSold = false,
                            Name = "Cheseburger Standard",
                            Popular = true,
                            Price = 6.49m,
                            Stock = 45,
                            UrlImage = "https://source.unsplash.com/400x300/?cheeseburger"
                        },
                        new
                        {
                            Id = 3,
                            Available = true,
                            CategoryId = 1,
                            Detail = "Salad with cheese",
                            MostSold = false,
                            Name = "Chese salad Standard",
                            Popular = false,
                            Price = 5.29m,
                            Stock = 30,
                            UrlImage = "https://source.unsplash.com/400x300/?salad"
                        },
                        new
                        {
                            Id = 4,
                            Available = true,
                            CategoryId = 2,
                            Detail = "Combo meal with hamburger",
                            MostSold = true,
                            Name = "Hamburger, fries, soda",
                            Popular = true,
                            Price = 9.99m,
                            Stock = 40,
                            UrlImage = "https://source.unsplash.com/400x300/?burger,fries,cola"
                        },
                        new
                        {
                            Id = 5,
                            Available = true,
                            CategoryId = 2,
                            Detail = "Combo meal with cheeseburger",
                            MostSold = false,
                            Name = "Cheseburger, fries, soda",
                            Popular = true,
                            Price = 10.49m,
                            Stock = 35,
                            UrlImage = "https://source.unsplash.com/400x300/?cheeseburger,fries,drink"
                        },
                        new
                        {
                            Id = 6,
                            Available = true,
                            CategoryId = 2,
                            Detail = "Combo meal with salad",
                            MostSold = false,
                            Name = "Chese salad, fries, soda",
                            Popular = false,
                            Price = 8.99m,
                            Stock = 25,
                            UrlImage = "https://source.unsplash.com/400x300/?salad,fries,drink"
                        },
                        new
                        {
                            Id = 7,
                            Available = true,
                            CategoryId = 3,
                            Detail = "Vegetarian meal",
                            MostSold = false,
                            Name = "Natural meal with leafs",
                            Popular = true,
                            Price = 7.99m,
                            Stock = 20,
                            UrlImage = "https://source.unsplash.com/400x300/?vegetarian"
                        },
                        new
                        {
                            Id = 8,
                            Available = true,
                            CategoryId = 3,
                            Detail = "Vegetarian meal with cheese",
                            MostSold = false,
                            Name = "Natural meal with chese",
                            Popular = false,
                            Price = 8.49m,
                            Stock = 15,
                            UrlImage = "https://source.unsplash.com/400x300/?vegetarian,cheese"
                        },
                        new
                        {
                            Id = 9,
                            Available = true,
                            CategoryId = 3,
                            Detail = "Fully vegan option",
                            MostSold = false,
                            Name = "Vegan",
                            Popular = false,
                            Price = 8.99m,
                            Stock = 10,
                            UrlImage = "https://source.unsplash.com/400x300/?vegan"
                        },
                        new
                        {
                            Id = 10,
                            Available = true,
                            CategoryId = 4,
                            Detail = "Cold Coca-Cola can",
                            MostSold = true,
                            Name = "Coca-cola",
                            Popular = true,
                            Price = 1.50m,
                            Stock = 100,
                            UrlImage = "https://source.unsplash.com/400x300/?coca-cola"
                        },
                        new
                        {
                            Id = 11,
                            Available = true,
                            CategoryId = 4,
                            Detail = "Refreshing Brazilian soda",
                            MostSold = false,
                            Name = "Guaraná",
                            Popular = false,
                            Price = 1.40m,
                            Stock = 80,
                            UrlImage = "https://source.unsplash.com/400x300/?soda,guarana"
                        },
                        new
                        {
                            Id = 12,
                            Available = true,
                            CategoryId = 4,
                            Detail = "Cold Pepsi can",
                            MostSold = false,
                            Name = "Pepsi",
                            Popular = false,
                            Price = 1.50m,
                            Stock = 90,
                            UrlImage = "https://source.unsplash.com/400x300/?pepsi"
                        },
                        new
                        {
                            Id = 13,
                            Available = true,
                            CategoryId = 5,
                            Detail = "Fresh orange juice",
                            MostSold = false,
                            Name = "Orange juice",
                            Popular = true,
                            Price = 2.00m,
                            Stock = 50,
                            UrlImage = "https://source.unsplash.com/400x300/?orange-juice"
                        },
                        new
                        {
                            Id = 14,
                            Available = true,
                            CategoryId = 5,
                            Detail = "Fresh strawberry juice",
                            MostSold = false,
                            Name = "Strawberry juice",
                            Popular = false,
                            Price = 2.20m,
                            Stock = 45,
                            UrlImage = "https://source.unsplash.com/400x300/?strawberry-juice"
                        },
                        new
                        {
                            Id = 15,
                            Available = true,
                            CategoryId = 5,
                            Detail = "Fresh grape juice",
                            MostSold = false,
                            Name = "Grape Juice",
                            Popular = false,
                            Price = 2.10m,
                            Stock = 40,
                            UrlImage = "https://source.unsplash.com/400x300/?grape-juice"
                        },
                        new
                        {
                            Id = 16,
                            Available = true,
                            CategoryId = 5,
                            Detail = "Mineral water",
                            MostSold = false,
                            Name = "Water",
                            Popular = false,
                            Price = 1.00m,
                            Stock = 100,
                            UrlImage = "https://source.unsplash.com/400x300/?water,bottle"
                        },
                        new
                        {
                            Id = 17,
                            Available = true,
                            CategoryId = 6,
                            Detail = "Chocolate chip cookies",
                            MostSold = false,
                            Name = "Chocolate cookies",
                            Popular = true,
                            Price = 2.50m,
                            Stock = 30,
                            UrlImage = "https://source.unsplash.com/400x300/?chocolate-cookies"
                        },
                        new
                        {
                            Id = 18,
                            Available = true,
                            CategoryId = 6,
                            Detail = "Vanilla flavored cookies",
                            MostSold = false,
                            Name = "Vanilla cookies",
                            Popular = false,
                            Price = 2.40m,
                            Stock = 28,
                            UrlImage = "https://source.unsplash.com/400x300/?vanilla-cookies"
                        },
                        new
                        {
                            Id = 19,
                            Available = true,
                            CategoryId = 6,
                            Detail = "Chocolate swiss roll cake",
                            MostSold = true,
                            Name = "Swiss cake",
                            Popular = true,
                            Price = 3.00m,
                            Stock = 25,
                            UrlImage = "https://source.unsplash.com/400x300/?cake,chocolate"
                        });
                });

            modelBuilder.Entity("ApiECommerce.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contact")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UrlImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("ApiECommerce.Entities.BasketItem", b =>
                {
                    b.HasOne("Order", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderId");

                    b.HasOne("ApiECommerce.Entities.Product", null)
                        .WithMany("BasketItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiECommerce.Entities.Product", b =>
                {
                    b.HasOne("ApiECommerce.Entities.Category", null)
                        .WithMany("Produtcts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Order", b =>
                {
                    b.HasOne("ApiECommerce.Entities.User", null)
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OrderDetail", b =>
                {
                    b.HasOne("ApiECommerce.Entities.Product", null)
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiECommerce.Entities.Category", b =>
                {
                    b.Navigation("Produtcts");
                });

            modelBuilder.Entity("ApiECommerce.Entities.Product", b =>
                {
                    b.Navigation("BasketItems");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("ApiECommerce.Entities.User", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
